// Mocks generated by Mockito 5.1.0 from annotations
// in weather_app/test/lib/weather/logic/bloc/weather_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:collection' as _i2;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/weather/repository/weather_repository.dart' as _i5;
import 'package:weather_app/weather/vo/city_vo.dart' as _i7;
import 'package:weather_app/weather/vo/weather_vo.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHashMap_0<K, V> extends _i1.Fake implements _i2.HashMap<K, V> {}

class _FakeClient_1 extends _i1.Fake implements _i3.Client {}

class _FakeCurrentWeatherVO_2 extends _i1.Fake implements _i4.CurrentWeatherVO {
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i5.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HashMap<String, String> get headers =>
      (super.noSuchMethod(Invocation.getter(#headers),
              returnValue: _FakeHashMap_0<String, String>())
          as _i2.HashMap<String, String>);
  @override
  _i3.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_1()) as _i3.Client);
  @override
  _i6.Future<_i4.CurrentWeatherVO> fetchCurrentWeather(String? location) =>
      (super.noSuchMethod(Invocation.method(#fetchCurrentWeather, [location]),
              returnValue:
                  Future<_i4.CurrentWeatherVO>.value(_FakeCurrentWeatherVO_2()))
          as _i6.Future<_i4.CurrentWeatherVO>);
  @override
  _i6.Future<List<_i7.CityVO>> fetchLocations(String? location) =>
      (super.noSuchMethod(Invocation.method(#fetchLocations, [location]),
              returnValue: Future<List<_i7.CityVO>>.value(<_i7.CityVO>[]))
          as _i6.Future<List<_i7.CityVO>>);
  @override
  void setHeader(String? header, String? value) =>
      super.noSuchMethod(Invocation.method(#setHeader, [header, value]),
          returnValueForMissingStub: null);
  @override
  void checkResponse(_i3.Response? response,
          {void Function(_i3.Response)? onError}) =>
      super.noSuchMethod(
          Invocation.method(#checkResponse, [response], {#onError: onError}),
          returnValueForMissingStub: null);
  @override
  void checkResponseOrThrow(
          _i3.Response? response, Exception Function()? exception) =>
      super.noSuchMethod(
          Invocation.method(#checkResponseOrThrow, [response, exception]),
          returnValueForMissingStub: null);
}
